if (!("ace" in window)) { window.ace = {} } if (!("helper" in window.ace)) { window.ace.helper = {} } if (!("vars" in window.ace)) { window.ace.vars = { icon: " ace-icon ", ".icon": ".ace-icon" } } ace.vars.touch = "ontouchstart" in document.documentElement; jQuery(function (e) { ace.click_event = ace.vars.touch && e.fn.tap ? "tap" : "click"; var d = navigator.userAgent; ace.vars.webkit = !!d.match(/AppleWebKit/i); ace.vars.safari = !!d.match(/Safari/i) && !d.match(/Chrome/i); ace.vars.android = ace.vars.safari && !!d.match(/Android/i); ace.vars.ios_safari = !!d.match(/OS ([4-8])(_\d)+ like Mac OS X/i) && !d.match(/CriOS/i); ace.vars.non_auto_fixed = ace.vars.android || ace.vars.ios_safari; if (ace.vars.non_auto_fixed) { e("body").addClass("mob-safari") } ace.vars.transition = "transition" in document.body.style || "WebkitTransition" in document.body.style || "MozTransition" in document.body.style || "OTransition" in document.body.style; var c = { general_vars: null, handle_side_menu: null, add_touch_drag: null, sidebar_scrollable: [true, true, false || ace.vars.safari || ace.vars.ios_safari, 200, false], sidebar_hoverable: null, general_things: null, widget_boxes: null, widget_reload_handler: null, settings_box: null, settings_rtl: null, settings_skin: null, enable_searchbox_autocomplete: null, auto_hide_sidebar: null, auto_padding: null, auto_container: null }; for (var a in c) { if (!(a in ace)) { continue } var b = c[a]; if (b === false) { continue } else { if (b == null) { b = [jQuery] } else { if (b instanceof String) { b = [jQuery, b] } else { if (b instanceof Array) { b.unshift(jQuery) } } } } ace[a].apply(null, b) } }); ace.general_vars = function (c) { var d = "menu-min"; var a = "responsive-min"; var e = "h-sidebar"; var b = c("#sidebar").eq(0); ace.vars.mobile_style = 1; if (b.hasClass("responsive") && !c("#menu-toggler").hasClass("navbar-toggle")) { ace.vars.mobile_style = 2 } else { if (b.hasClass(a)) { ace.vars.mobile_style = 3 } else { if (b.hasClass("navbar-collapse")) { ace.vars.mobile_style = 4 } } } c(window).on("resize.ace.vars", function () { ace.vars.window = { width: parseInt(c(this).width()), height: parseInt(c(this).height()) }; ace.vars.mobile_view = ace.vars.mobile_style < 4 && ace.helper.mobile_view(); ace.vars.collapsible = !ace.vars.mobile_view && ace.helper.collapsible(); ace.vars.nav_collapse = (ace.vars.collapsible || ace.vars.mobile_view) && c("#navbar").hasClass("navbar-collapse"); var f = c(document.getElementById("sidebar")); ace.vars.minimized = (!ace.vars.collapsible && f.hasClass(d)) || (ace.vars.mobile_style == 3 && ace.vars.mobile_view && f.hasClass(a)); ace.vars.horizontal = !(ace.vars.mobile_view || ace.vars.collapsible) && f.hasClass(e) }).triggerHandler("resize.ace.vars") }; ace.general_things = function (d) { var c = !!d.fn.ace_scroll; if (c) { d(".dropdown-content").ace_scroll({ reset: false, mouseWheelLock: true }) } d(window).on("resize.reset_scroll", function () { if (c) { d(".ace-scroll").ace_scroll("reset") } }); d(document).on("settings.ace.reset_scroll", function (g, f) { if (f == "sidebar_collapsed" && c) { d(".ace-scroll").ace_scroll("reset") } }); d(document).on("click.dropdown.pos", '.dropdown-toggle[data-position="auto"]', function () { var g = d(this).offset(); var f = d(this.parentNode); if (parseInt(g.top + d(this).height()) + 50 > (ace.helper.scrollTop() + ace.helper.winHeight() - f.find(".dropdown-menu").eq(0).height())) { f.addClass("dropup") } else { f.removeClass("dropup") } }); d(document).on("click", ".dropdown-navbar .nav-tabs", function (i) { i.stopPropagation(); var h, f; var g = i.target; if ((h = d(i.target).closest("[data-toggle=tab]")) && h.length > 0) { h.tab("show"); i.preventDefault() } }); d('.ace-nav [class*="icon-animated-"]').closest("a").one("click", function () { var g = d(this).find('[class*="icon-animated-"]').eq(0); var f = g.attr("class").match(/icon\-animated\-([\d\w]+)/); g.removeClass(f[0]) }); d(".sidebar .nav-list .badge[title],.sidebar .nav-list .badge[title]").each(function () { var f = d(this).attr("class").match(/tooltip\-(?:\w+)/); f = f ? f[0] : "tooltip-error"; d(this).tooltip({ placement: function (g, h) { var i = d(h).offset(); if (parseInt(i.left) < parseInt(document.body.scrollWidth / 2)) { return "right" } return "left" }, container: "body", template: '<div class="tooltip ' + f + '"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' }) }); var e = d(".btn-scroll-up"); if (e.length > 0) { var b = false; d(window).on("scroll.scroll_btn", function () { if (ace.helper.scrollTop() > parseInt(ace.helper.winHeight() / 4)) { if (!b) { e.addClass("display"); b = true } } else { if (b) { e.removeClass("display"); b = false } } }).triggerHandler("scroll.scroll_btn"); e.on(ace.click_event, function () { var f = Math.min(500, Math.max(100, parseInt(ace.helper.scrollTop() / 3))); d("html,body").animate({ scrollTop: 0 }, f); return false }) } if (ace.vars.webkit) { var a = d(".ace-nav").get(0); if (a) { d(window).on("resize.webkit", function () { ace.helper.redraw(a) }) } } }; ace.helper.collapsible = function () { var a; return (document.querySelector("#sidebar.navbar-collapse") != null) && ((a = document.querySelector('.navbar-toggle[data-target*=".sidebar"]')) != null) && a.scrollHeight > 0 }; ace.helper.mobile_view = function () { var a; return ((a = document.getElementById("menu-toggler")) != null && a.scrollHeight > 0) }; ace.helper.redraw = function (b) { var a = b.style.display; b.style.display = "none"; b.offsetHeight; b.style.display = a }; ace.helper.scrollTop = function () { return document.scrollTop || document.documentElement.scrollTop || document.body.scrollTop }; ace.helper.winHeight = function () { return window.innerHeight || document.documentElement.clientHeight }; ace.helper.camelCase = function (a) { return a.replace(/-([\da-z])/gi, function (b, c) { return c ? c.toUpperCase() : "" }) }; ace.helper.removeStyle = "removeProperty" in document.body.style ? function (a, b) { a.style.removeProperty(b) } : function (a, b) { a.style[ace.helper.camelCase(b)] = "" }; ace.helper.hasClass = "classList" in document.documentElement ? function (b, a) { return b.classList.contains(a) } : function (b, a) { return b.className.indexOf(a) > -1 }; ace.add_touch_drag = function (c) { if (!ace.vars.touch) { return } var a = "touchstart MSPointerDown pointerdown", d = "touchend touchcancel MSPointerUp MSPointerCancel pointerup pointercancel", b = "touchmove MSPointerMove MSPointerHover pointermove"; c.event.special.ace_drag = { setup: function () { var e = 0; var f = c(this); f.on(a, function (j) { var l = j.originalEvent.touches ? j.originalEvent.touches[0] : j, n = { coords: [l.pageX, l.pageY], origin: c(j.target) }, i; n.origin.trigger({ type: "ace_dragStart", start: (n || [-1, -1]) }); var m = false, h = 0, g = 0; function k(p) { if (!n) { return } var q = p.originalEvent.touches ? p.originalEvent.touches[0] : p; i = { coords: [q.pageX, q.pageY] }; if (n && i) { h = 0; g = 0; m = (Math.abs(g = n.coords[1] - i.coords[1]) > e && Math.abs(h = n.coords[0] - i.coords[0]) <= Math.abs(g)) ? (g > 0 ? "up" : "down") : (Math.abs(h = n.coords[0] - i.coords[0]) > e && Math.abs(g) <= Math.abs(h)) ? (h > 0 ? "left" : "right") : false; if (m !== false) { var o = {}; n.origin.trigger({ type: "ace_drag", direction: m, dx: h, dy: g, retval: o }); p.preventDefault() } } n.coords[0] = i.coords[0]; n.coords[1] = i.coords[1] } f.on(b, k).one(d, function (o) { f.off(b, k); n.origin.trigger({ type: "ace_dragEnd", stop: (i || [-1, -1]) }); n = i = undefined }) }) } } }; ace.handle_side_menu = function (b) { var a = b(".sidebar").eq(0); b(document).on(ace.click_event + ".ace.menu", "#menu-toggler", function () { b("#sidebar").toggleClass("display"); b(this).toggleClass("display"); if (b(this).hasClass("display") && "sidebar_scroll" in ace.helper) { ace.helper.sidebar_scroll.reset() } return false }).on(ace.click_event + ".ace.menu", ".sidebar-collapse", function () { if (ace.vars.collapsible || ace.vars.horizontal) { return } ace.vars.minimized = !ace.vars.minimized; ace.settings.sidebar_collapsed.call(this, ace.vars.minimized) }).on(ace.click_event + ".ace.menu", ".sidebar-expand", function () { if (ace.vars.minimized) { ace.settings.sidebar_collapsed.call(this, false, false) } var f = b(this).find(ace.vars[".icon"]); var e = f.attr("data-icon1"); var d = f.attr("data-icon2"); if (a.hasClass("responsive-min")) { f.removeClass(e).addClass(d); a.removeClass("responsive-min"); a.addClass("display responsive-max"); ace.vars.minimized = false } else { f.removeClass(d).addClass(e); a.removeClass("display responsive-max"); a.addClass("responsive-min"); ace.vars.minimized = true } b(document).triggerHandler("settings.ace", ["sidebar_collapsed", ace.vars.minimized]) }); var c = ace.vars.ios_safari; b(document).on(ace.click_event + ".ace.submenu", ".sidebar .nav-list", function (k) { var f = this; var l = b(k.target).closest("a"); if (!l || l.length == 0) { return } var h = ace.vars.minimized && !ace.vars.collapsible; if (!l.hasClass("dropdown-toggle")) { if (ace.click_event == "tap" && h && l.get(0).parentNode.parentNode == f) { var m = l.find(".menu-text").get(0); if (k.target != m && !b.contains(m, k.target)) { k.preventDefault(); return false } } if (c && l.attr("data-link") !== "false") { document.location = l.attr("href"); k.preventDefault(); return false } return } var d = l.siblings(".submenu").get(0); if (!d) { return false } var j = 0; var g = 250; var e = d.parentNode.parentNode; if ((h && e == f) || (b(d.parentNode).hasClass("hover") && !ace.vars.collapsible)) { k.preventDefault(); return false } if (d.scrollHeight == 0) { b(e).find("> .open > .submenu").each(function () { if (this != d && !b(this.parentNode).hasClass("active")) { j -= this.scrollHeight; ace.submenu.hide(this, g) } }) } var i = 0; if ((i = ace.submenu.toggle(d, g)) == 1) { if (j != 0) { j += d.scrollHeight } } else { if (i == -1) { j -= d.scrollHeight } } if (j != 0 && "sidebar_scroll" in ace.helper) { ace.helper.sidebar_scroll.prehide(j) } k.preventDefault(); return false }) }; ace.submenu = { show: function (b, e) { var d = $(b); var c; d.trigger(c = $.Event("show.ace.submenu")); if (c.isDefaultPrevented()) { return false } d.css({ height: 0, overflow: "hidden", display: "block" }).removeClass("nav-hide").addClass("nav-show").parent().addClass("open"); if (e > 0) { d.css({ height: b.scrollHeight, "transition-property": "height", "transition-duration": (e / 1000) + "s" }) } var a = function (f) { f && f.stopPropagation(); d.css({ "transition-property": "", "transition-duration": "", overflow: "", height: "" }); if (ace.vars.transition) { d.off(".trans") } d.trigger($.Event("shown.ace.submenu")) }; if (e > 0 && ace.vars.transition) { d.one("transitionend.trans webkitTransitionEnd.trans mozTransitionEnd.trans oTransitionEnd.trans", a) } else { a() } if (ace.vars.android) { setTimeout(function () { d.css({ overflow: "", height: "" }) }, e + 10) } return true }, hide: function (b, e) { var d = $(b); var c; d.trigger(c = $.Event("hide.ace.submenu")); if (c.isDefaultPrevented()) { return false } d.css({ height: b.scrollHeight, overflow: "hidden" }).parent().removeClass("open"); b.offsetHeight; if (e > 0) { d.css({ height: 0, "transition-property": "height", "transition-duration": (e / 1000) + "s" }) } var a = function (f) { f && f.stopPropagation(); d.css({ display: "none", overflow: "", height: "", "transition-property": "", "transition-duration": "" }).removeClass("nav-show").addClass("nav-hide"); if (ace.vars.transition) { d.off(".trans") } d.trigger($.Event("hidden.ace.submenu")) }; if (e > 0 && ace.vars.transition) { d.one("transitionend.trans webkitTransitionEnd.trans mozTransitionEnd.trans oTransitionEnd.trans", a) } else { a() } if (ace.vars.android) { setTimeout(function () { d.css({ display: "none", overflow: "", height: "" }) }, e + 10) } return true }, toggle: function (a, b) { if (a.scrollHeight == 0) { if (ace.submenu.show(a, b)) { return 1 } } else { if (ace.submenu.hide(a, b)) { return -1 } } return 0 } }; ace.sidebar_scrollable = function (e, z, f, A, j, k) { if (!e.fn.ace_scroll) { return } var a = ace.vars.safari && navigator.userAgent.match(/version\/[1-5]/i); var i = e(".sidebar"), w = e(".navbar"), r = i.find(".nav-list"), t = i.find(".sidebar-toggle"), h = i.find(".sidebar-shortcuts"), o = e(window), l = i.get(0), g = r.get(0); if (!l || !g) { return } var B = null, x = null, n = null, s = null, c = null; var C = false, y = false; var z = z || false, f = f || false, A = A || false, b = true; var p = "getComputedStyle" in window ? function () { l.offsetHeight; return window.getComputedStyle(l).position == "fixed" } : function () { l.offsetHeight; return i.css("position") == "fixed" }; var d, q; var m = p(), u = i.hasClass("h-sidebar"); var v = ace.helper.sidebar_scroll = { available_height: function () { var D = r.parent().offset(); if (m) { D.top -= ace.helper.scrollTop() } return o.innerHeight() - D.top - (A ? 0 : t.outerHeight()) }, content_height: function () { return g.scrollHeight }, initiate: function (E) { if (y) { return } if (!m) { return } r.wrap('<div style="position: relative;" />'); r.after("<div><div></div></div>"); r.wrap('<div class="nav-wrap" />'); if (!A) { t.css({ "z-index": 1 }) } if (!f) { h.css({ "z-index": 99 }) } B = r.parent().next().ace_scroll({ size: v.available_height(), reset: true, mouseWheelLock: true, hoverReset: false, dragEvent: true, touchDrag: false }).closest(".ace-scroll").addClass("nav-scroll"); c = B.data("ace_scroll"); x = B.find(".scroll-content").eq(0); n = x.find(" > div").eq(0); s = B.find(".scroll-bar").eq(0); if (f) { r.parent().prepend(h).wrapInner("<div />"); r = r.parent() } if (A) { r.append(t); r.closest(".nav-wrap").addClass("nav-wrap-t") } r.css({ position: "relative" }); if (k === true) { B.addClass("scrollout") } g = r.get(0); g.style.top = 0; x.on("scroll.nav", function () { g.style.top = (-1 * this.scrollTop) + "px" }); r.on("mousewheel.ace_scroll DOMMouseScroll.ace_scroll", function (O) { return B.trigger(O) }); var J = x.get(0); r.on("ace_drag.nav", function (O) { if (!C) { return } if (O.direction == "up" || O.direction == "down") { c.move_bar(true); move_nav = false; var P = O.dy; if (Math.abs(P) > 20) { P = P * 2 } if (P != 0) { J.scrollTop = J.scrollTop + P; g.style.top = (-1 * J.scrollTop) + "px" } } }); if (j) { r.on("ace_dragStart.nav", function (O) { O.stopPropagation(); r.css("transition-property", "none"); s.css("transition-property", "none") }).on("ace_dragEnd.nav", function (O) { O.stopPropagation(); r.css("transition-property", "top"); s.css("transition-property", "top") }) } if (a && !A) { var I = t.get(0); if (I) { x.on("scroll.safari", function () { ace.helper.redraw(I) }) } } y = true; if (E == true) { v.reset(); if (z && c.is_active()) { var N; var H = i.find(".nav-list"); if (ace.vars.minimized && !ace.vars.collapsible) { N = H.find("> .active") } else { N = r.find("> .active.hover"); if (N.length == 0) { N = r.find(".active:not(.open)") } } var K = N.outerHeight(); H = H.get(0); var G = N.get(0); while (G != H) { K += G.offsetTop; G = G.parentNode } var L = K - B.height(); if (L > 0) { g.style.top = -L + "px"; x.scrollTop(L) } } z = false } if (typeof j === "number" && j > 0) { r.css({ "transition-property": "top", "transition-duration": (j / 1000).toFixed(2) + "s" }); s.css({ "transition-property": "top", "transition-duration": (j / 1500).toFixed(2) + "s" }); B.on("drag.start", function (O) { O.stopPropagation(); r.css("transition-property", "none") }).on("drag.end", function (O) { O.stopPropagation(); r.css("transition-property", "top") }) } if (ace.vars.android) { var F = ace.helper.scrollTop(); if (F < 2) { window.scrollTo(F, 0); setTimeout(function () { v.reset() }, 20) } var M = ace.helper.winHeight(), D; e(window).on("scroll.ace_scroll", function () { if (C && c.is_active()) { D = ace.helper.winHeight(); if (D != M) { M = D; v.reset() } } }) } }, reset: function () { if (!m) { v.disable(); return } if (!y) { v.initiate() } var D = !ace.vars.collapsible && (!u || (u && ace.vars.mobile_view)) && (d = v.available_height()) < (q = g.scrollHeight); C = true; if (D) { n.css({ height: q, width: 8 }); B.prev().css({ "max-height": d }); c.update({ size: d }).enable().reset() } if (!D || !c.is_active()) { if (C) { v.disable() } } else { i.addClass("sidebar-scroll") } }, disable: function () { C = false; if (B) { B.css({ height: "", "max-height": "" }); n.css({ height: "", width: "" }); B.prev().css({ "max-height": "" }); c.disable() } if (parseInt(g.style.top) < 0 && j && ace.vars.transition) { r.one("transitionend.trans webkitTransitionEnd.trans mozTransitionEnd.trans oTransitionEnd.trans", function () { i.removeClass("sidebar-scroll"); r.off(".trans") }) } else { i.removeClass("sidebar-scroll") } g.style.top = 0 }, prehide: function (E) { if (!C || ace.vars.minimized) { return } if (v.content_height() + E < v.available_height()) { v.disable() } else { if (E < 0) { var D = x.scrollTop() + E; if (D < 0) { return } g.style.top = (-1 * D) + "px" } } } }; v.initiate(true); e(document).on("settings.ace.scroll", function (E, F, D) { if (F == "sidebar_collapsed" && m) { v.reset() } else { if (F === "sidebar_fixed" || F === "navbar_fixed") { m = p(); if (m && !C) { v.reset() } else { if (!m) { v.disable() } } } } }); o.on("resize.ace.scroll", function () { m = p(); v.reset() }); i.on("hidden.ace.submenu shown.ace.submenu", ".submenu", function (D) { D.stopPropagation(); if (!ace.vars.minimized) { if (ace.vars.webkit) { setTimeout(function () { v.reset() }, 0) } else { v.reset() } } }) }; ace.sidebar_hoverable = function (f) { if (!("querySelector" in document) || !("removeProperty" in document.body.style)) { return } ace.helper.sidebar_hover = { reset: function () { i.find(".submenu").each(function () { var n = this, l = this.parentNode; if (n) { n.style.removeProperty("top"); n.style.removeProperty("bottom"); var m = l.querySelector(".menu-text"); if (m) { m.style.removeProperty("margin-top") } } if (l.className.lastIndexOf("_up") >= 0) { f(l).removeClass("pull_up") } }) } }; var d = "getComputedStyle" in window ? function () { c.offsetHeight; return window.getComputedStyle(c).position == "fixed" } : function () { c.offsetHeight; return h.css("position") == "fixed" }; f(window).on("resize.ace_hover", function () { j = d(); ace.helper.sidebar_hover.reset() }); f(document).on("settings.ace.hover", function (n, m, l) { if (m == "sidebar_collapsed") { ace.helper.sidebar_hover.reset() } else { if (m == "navbar_fixed") { j = l } } }); var i = f(".sidebar").eq(0), a = i.get(0), e = i.find(".nav-list").get(0); var h = f(".navbar").eq(0), c = h.get(0), b = i.hasClass("h-sidebar"), j = h.css("position") == "fixed"; i.find(".submenu").parent().addClass("hsub"); i.on("mouseenter.ace_hover", ".nav-list li.hsub", function (m) { if (ace.vars.collapsible || (b && !ace.vars.mobile_view)) { return } var l = this.querySelector(".submenu"); if (l) { if (ace.helper.hasClass(this, "hover")) { k.call(this, l) } else { if (this.parentNode == e && ace.vars.minimized) { k.call(this, l) } } } }); var g = 50; function k(l) { var r = f(l); l.style.removeProperty("top"); l.style.removeProperty("bottom"); var p = null; if (ace.vars.minimized && (p = l.parentNode.querySelector(".menu-text"))) { p.style.removeProperty("margin-top") } var o = r.offset(); var t = ace.helper.scrollTop(); var m = false; var q = t; if (j) { q += c.clientHeight + 1 } var n = l.scrollHeight; if (p) { n += 40; o.top -= 40 } var w = parseInt(o.top + n); var v; if ((v = w - (window.innerHeight + t - 50)) > 0) { if (n - v < g && o.top - v > q) { l.style.top = "auto"; l.style.bottom = "-10px"; if (p) { p.style.marginTop = -(n - 50) + "px"; m = true } } else { if (o.top - v < q) { v = o.top - q } if (w - v < o.top + g) { v -= g } var u = p ? 40 : 20; if (v > u) { l.style.top = -(v) + "px"; if (p) { p.style.marginTop = -(v) + "px"; m = true } } } } var s = this.className.lastIndexOf("pull_up"); if (m) { if (s == -1) { this.className = this.className + " pull_up" } } else { if (s >= 0) { this.className = this.className.replace(/(^|\s)pull_up($|\s)/, "") } } if (ace.vars.safari) { ace.helper.redraw(l) } } }; ace.widget_boxes = function (b) { b(document).on("hide.bs.collapse show.bs.collapse", function (d) { var c = d.target.getAttribute("id"); b('[href*="#' + c + '"]').find(ace.vars[".icon"]).each(function () { var f = b(this); var e; var g = null; var h = null; if ((g = f.attr("data-icon-show"))) { h = f.attr("data-icon-hide") } else { if (e = f.attr("class").match(/fa\-(.*)\-(up|down)/)) { g = "fa-" + e[1] + "-down"; h = "fa-" + e[1] + "-up" } } if (g) { if (d.type == "show") { f.removeClass(g).addClass(h) } else { f.removeClass(h).addClass(g) } return false } }) }); var a = function (e, c) { this.$box = b(e); var d = this; this.reload = function () { var g = this.$box; var f = false; if (g.css("position") == "static") { f = true; g.addClass("position-relative") } g.append('<div class="widget-box-overlay"><i class="' + ace.vars.icon + 'loading-icon fa fa-spinner fa-spin fa-2x white"></i></div>'); g.one("reloaded.ace.widget", function () { g.find(".widget-box-overlay").remove(); if (f) { g.removeClass("position-relative") } }) }; this.close = function () { var g = this.$box; var f = 300; g.fadeOut(f, function () { g.trigger("closed.ace.widget"); g.remove() }) }; this.toggle = function (r, m) { var f = this.$box; var j = f.find(".widget-body"); var q = null; var n = typeof r !== "undefined" ? r : (f.hasClass("collapsed") ? "show" : "hide"); var i = n == "show" ? "shown" : "hidden"; if (typeof m === "undefined") { m = f.find("> .widget-header a[data-action=collapse]").eq(0); if (m.length == 0) { m = null } } if (m) { q = m.find(ace.vars[".icon"]).eq(0); var k; var g = null; var l = null; if ((g = q.attr("data-icon-show"))) { l = q.attr("data-icon-hide") } else { if (k = q.attr("class").match(/fa\-(.*)\-(up|down)/)) { g = "fa-" + k[1] + "-down"; l = "fa-" + k[1] + "-up" } } } var p = j.find(".widget-body-inner"); if (p.length == 0) { j = j.wrapInner('<div class="widget-body-inner"></div>').find(":first-child").eq(0) } else { j = p.eq(0) } var h = 300; var o = 200; if (n == "show") { if (q) { q.removeClass(g).addClass(l) } f.removeClass("collapsed"); j.slideUp(0, function () { j.slideDown(h, function () { f.trigger(i + ".ace.widget") }) }) } else { if (q) { q.removeClass(l).addClass(g) } j.slideUp(o, function () { f.addClass("collapsed"); f.trigger(i + ".ace.widget") }) } }; this.hide = function () { this.toggle("hide") }; this.show = function () { this.toggle("show") }; this.fullscreen = function () { var f = this.$box.find("> .widget-header a[data-action=fullscreen]").find(ace.vars[".icon"]).eq(0); var h = null; var g = null; if ((h = f.attr("data-icon1"))) { g = f.attr("data-icon2") } else { h = "fa-expand"; g = "fa-compress" } if (!this.$box.hasClass("fullscreen")) { f.removeClass(h).addClass(g); this.$box.addClass("fullscreen") } else { f.addClass(h).removeClass(g); this.$box.removeClass("fullscreen") } this.$box.trigger("fullscreened.ace.widget") } }; b.fn.widget_box = function (d, f) { var e; var c = this.each(function () { var i = b(this); var h = i.data("widget_box"); var g = typeof d === "object" && d; if (!h) { i.data("widget_box", (h = new a(this, g))) } if (typeof d === "string") { e = h[d](f) } }); return (e === undefined) ? c : e }; b(document).on("click.ace.widget", ".widget-header a[data-action]", function (e) { e.preventDefault(); var h = b(this); var g = h.closest(".widget-box"); if (g.length == 0 || g.hasClass("ui-sortable-helper")) { return } var c = g.data("widget_box"); if (!c) { g.data("widget_box", (c = new a(g.get(0)))) } var i = h.data("action"); if (i == "collapse") { var f = g.hasClass("collapsed") ? "show" : "hide"; var d; g.trigger(d = b.Event(f + ".ace.widget")); if (d.isDefaultPrevented()) { return } c.toggle(f, h) } else { if (i == "close") { var d; g.trigger(d = b.Event("close.ace.widget")); if (d.isDefaultPrevented()) { return } c.close() } else { if (i == "reload") { h.blur(); var d; g.trigger(d = b.Event("reload.ace.widget")); if (d.isDefaultPrevented()) { return } c.reload() } else { if (i == "fullscreen") { var d; g.trigger(d = b.Event("fullscreen.ace.widget")); if (d.isDefaultPrevented()) { return } c.fullscreen() } else { if (i == "settings") { g.trigger("setting.ace.widget") } } } } } }) }; ace.settings_box = function (a) { a("#ace-settings-btn").on(ace.click_event, function (b) { b.preventDefault(); a(this).toggleClass("open"); a("#ace-settings-box").toggleClass("open") }); a("#ace-settings-navbar").on("click", function () { ace.settings.navbar_fixed(this.checked) }).each(function () { this.checked = ace.settings.is("navbar", "fixed") }); a("#ace-settings-sidebar").on("click", function () { ace.settings.sidebar_fixed(this.checked) }).each(function () { this.checked = ace.settings.is("sidebar", "fixed") }); a("#ace-settings-breadcrumbs").on("click", function () { ace.settings.breadcrumbs_fixed(this.checked) }).each(function () { this.checked = ace.settings.is("breadcrumbs", "fixed") }); a("#ace-settings-add-container").on("click", function () { ace.settings.main_container_fixed(this.checked) }).each(function () { this.checked = ace.settings.is("main-container", "fixed") }); a("#ace-settings-compact").removeAttr("checked").on("click", function () { if (this.checked) { a("#sidebar").addClass("compact"); var b = a("#ace-settings-hover"); if (b.length > 0 && !b.get(0).checked) { b.removeAttr("checked").trigger("click") } } else { a("#sidebar").removeClass("compact"); if ("sidebar_scroll" in ace.helper) { ace.helper.sidebar_scroll.reset() } } }); a("#ace-settings-highlight").removeAttr("checked").on("click", function () { if (this.checked) { a("#sidebar .nav-list > li").addClass("highlight") } else { a("#sidebar .nav-list > li").removeClass("highlight") } }); a("#ace-settings-hover").removeAttr("checked").on("click", function () { if (a(".sidebar").hasClass("h-sidebar")) { return } if (this.checked) { ace.vars["no-scroll"] = true; a("#sidebar li").addClass("hover").filter(".open").removeClass("open").find("> .submenu").css("display", "none") } else { ace.vars["no-scroll"] = false; a("#sidebar li.hover").removeClass("hover"); var b = a("#ace-settings-compact"); if (b.length > 0 && b.get(0).checked) { b.trigger("click") } if ("sidebar_hover" in ace.helper) { ace.helper.sidebar_hover.reset() } } if ("sidebar_scroll" in ace.helper) { ace.helper.sidebar_scroll.reset() } }) }; ace.settings_rtl = function (a) { a("#ace-settings-rtl").removeAttr("checked").on("click", function () { ace.switch_direction(jQuery) }) }; ace.switch_direction = function (c) { var b = c(document.body); b.toggleClass("rtl").find(".dropdown-menu:not(.datepicker-dropdown,.colorpicker)").toggleClass("dropdown-menu-right").end().find(".pull-right:not(.dropdown-menu,blockquote,.profile-skills .pull-right)").removeClass("pull-right").addClass("tmp-rtl-pull-right").end().find(".pull-left:not(.dropdown-submenu,.profile-skills .pull-left)").removeClass("pull-left").addClass("pull-right").end().find(".tmp-rtl-pull-right").removeClass("tmp-rtl-pull-right").addClass("pull-left").end().find(".chosen-select").toggleClass("chosen-rtl").next().toggleClass("chosen-rtl"); function a(i, e) { b.find("." + i).removeClass(i).addClass("tmp-rtl-" + i).end().find("." + e).removeClass(e).addClass(i).end().find(".tmp-rtl-" + i).removeClass("tmp-rtl-" + i).addClass(e) } a("align-left", "align-right"); a("no-padding-left", "no-padding-right"); a("arrowed", "arrowed-right"); a("arrowed-in", "arrowed-in-right"); a("tabs-left", "tabs-right"); a("messagebar-item-left", "messagebar-item-right"); c(".fa").each(function () { if (this.className.match(/ui-icon/) || c(this).closest(".fc-button").length > 0) { return } var e = this.attributes.length; for (var j = 0; j < e; j++) { var k = this.attributes[j].value; if (k.match(/fa\-(?:[\w\-]+)\-left/)) { this.attributes[j].value = k.replace(/fa\-([\w\-]+)\-(left)/i, "fa-$1-right") } else { if (k.match(/fa\-(?:[\w\-]+)\-right/)) { this.attributes[j].value = k.replace(/fa\-([\w\-]+)\-(right)/i, "fa-$1-left") } } } }); var f = b.hasClass("rtl"); if (f) { c(".scroll-hz").addClass("make-ltr").find(".scroll-content").wrapInner('<div class="make-rtl" />') } else { c(".scroll-hz").removeClass("make-ltr").find(".make-rtl").children().unwrap() } if (c.fn.ace_scroll) { c(".scroll-hz").ace_scroll("reset") } try { var g = c("#piechart-placeholder"); if (g.length > 0) { var h = c(document.body).hasClass("rtl") ? "nw" : "ne"; g.data("draw").call(g.get(0), g, g.data("chart"), h) } } catch (d) { } }; ace.settings_skin = function (a) { try { a("#skin-colorpicker").ace_colorpicker() } catch (b) { } a("#skin-colorpicker").on("change", function () { var g = a(this).find("option:selected").data("skin"); var c = a(document.body); c.removeClass("no-skin skin-1 skin-2 skin-3"); c.addClass(g); ace.data.set("skin", g); var d = ["red", "blue", "green", ""]; a(".ace-nav > li.grey").removeClass("dark"); a(".ace-nav > li").removeClass("no-border margin-1"); a(".ace-nav > li:not(:last-child)").removeClass("light-pink").find("> a > " + ace.vars[".icon"]).removeClass("pink").end().eq(0).find(".badge").removeClass("badge-warning"); a(".sidebar-shortcuts .btn").removeClass("btn-pink btn-white").find(ace.vars[".icon"]).removeClass("white"); a(".ace-nav > li.grey").removeClass("red").find(".badge").removeClass("badge-yellow"); a(".sidebar-shortcuts .btn").removeClass("btn-primary btn-white"); var e = 0; a(".sidebar-shortcuts .btn").each(function () { a(this).find(ace.vars[".icon"]).removeClass(d[e++]) }); var f = ["btn-success", "btn-info", "btn-warning", "btn-danger"]; if (g == "no-skin") { var e = 0; a(".sidebar-shortcuts .btn").each(function () { a(this).attr("class", "btn " + f[e++ % 4]) }) } else { if (g == "skin-1") { a(".ace-nav > li.grey").addClass("dark"); var e = 0; a(".sidebar-shortcuts").find(".btn").each(function () { a(this).attr("class", "btn " + f[e++ % 4]) }) } else { if (g == "skin-2") { a(".ace-nav > li").addClass("no-border margin-1"); a(".ace-nav > li:not(:last-child)").addClass("light-pink").find("> a > " + ace.vars[".icon"]).addClass("pink").end().eq(0).find(".badge").addClass("badge-warning"); a(".sidebar-shortcuts .btn").attr("class", "btn btn-white btn-pink").find(ace.vars[".icon"]).addClass("white") } else { if (g == "skin-3") { c.addClass("no-skin"); a(".ace-nav > li.grey").addClass("red").find(".badge").addClass("badge-yellow"); var e = 0; a(".sidebar-shortcuts .btn").each(function () { a(this).attr("class", "btn btn-primary btn-white"); a(this).find(ace.vars[".icon"]).addClass(d[e++]) }) } } } } if ("sidebar_scroll" in ace.helper) { ace.helper.sidebar_scroll.reset() } }) }; ace.widget_reload_handler = function (a) { a(document).on("reload.ace.widget", ".widget-box", function (b) { var c = a(this); setTimeout(function () { c.trigger("reloaded.ace.widget") }, parseInt(Math.random() * 1000 + 1000)) }) }; ace.enable_searchbox_autocomplete = function (a) { ace.vars.US_STATES = ["Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Dakota", "North Carolina", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"]; try { a("#nav-search-input").typeahead({ source: ace.vars.US_STATES, updater: function (c) { a("#nav-search-input").focus(); return c } }) } catch (b) { } };